class Bank {
  constructor() {
    this.accounts = [];
  }

  createAccount(owner, initialBalance) {
    const account = new BankAccount(owner, initialBalance);
    this.accounts.push(account);
    return account;
  }

  getAccountById(id) {
    return this.accounts.find(account => account.id === id);
  }
}

class BankAccount {
  constructor(owner, initialBalance) {
    this.id = Math.floor(Math.random() * 1000000); // Random ID for the account
    this.owner = owner;
    this.balance = initialBalance || 0;
  }

  deposit(amount) {
    if (amount > 0) {
      this.balance += amount;
      console.log(`${amount} deposited. Current balance: ${this.balance}`);
    } else {
      console.log("Invalid amount to deposit.");
    }
  }

  withdraw(amount) {
    if (amount > 0 && amount <= this.balance) {
      this.balance -= amount;
      console.log(`${amount} withdrawn. Current balance: ${this.balance}`);
    } else {
      console.log("Insufficient funds or invalid amount to withdraw.");
    }
  }

  checkBalance() {
    console.log(`Account balance for ${this.owner}: ${this.balance}`);
  }
}

// Example Usage
const bank = new Bank();

const acc1 = bank.createAccount("Alice", 1000);
const acc2 = bank.createAccount("Bob");

acc1.deposit(500);
acc2.deposit(200);

acc1.withdraw(200);
acc2.withdraw(100);

acc1.checkBalance();
acc2.checkBalance();

acc1.checkBalance();
acc2.checkBalance();
